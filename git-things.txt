https://blog.scottlowe.org/2015/01/27/using-fork-branch-git-workflow/
    1. fork repo
    2. git clone <link to repo> (useful: git clone [url] --branch [branch] --single-branch)
    3. git remote add [name] [URL] (double chekc: git remote -v (fetch/pull))
    4. git checkout -b <new branch name>
    5. make changes
    6. git add, commit -m, status
    7. git push <remote> <branch> (usually "origin" "master")
    8. check GH for PR banner
    9. Clean-up: git branch -d <new branch name>, git push --delete origin <new branch name>
        Hint: 8, 9 can be done on GH?

Basically, the “fork and branch” workflow looks something like this:
    1. Fork a GitHub repository.
    2. Clone the forked repository to your local system.
    3. Add a Git remote for the original repository.
    4. Create a feature branch in which to place your changes.
    5. Make your changes to the new branch.
    6. Commit the changes to the branch.
    7. Push the branch to GitHub.
    8. Open a pull request from the new branch to the original repo.
    9. Clean up after your pull request is merged.


"Personally I think one PR should be one logical change to the codebase - one new feature, or one bug fix. If that touches multiple files then that's fine - in fact I want the single PR to include the implementation, the updated tests for it and the updated documentation too" @simonw

Is there a course to get started with git/github?
