{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww16140\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs36 \cf2 \CocoaLigature0 Execution time:                            6.991s\
Files modified:                            83\
Character count reduction:                 1315 (0.05%)\
\
Per expression type:\
Old style (`%`) expressions attempted:     132/262 (50.4%)\
`.format(...)` calls attempted:            105/105 (100.0%)\
No concatenations attempted.\
F-string expressions created:              218\
Out of all attempted transforms, 132 resulted in errors.\
\
\
\
\
\
\
\
PR note:\
<!--- ***** Template: Refactor *****\
\
**Description** This refactor uses [flynt](https://github.com/ikamensh/flynt) to convert .format() to f-strings as proposed in [PEP 498](https://www.python.org/dev/peps/pep-0498/). Python f-strings: "Not only are they more readable, more concise, and less prone to error than other ways of formatting, but they are also faster!" The usage of f-strings in the openpilot code base should accomplish these stated goals, with the primary purpose of being faster. \
\
Some "%" expressions were not attempted (see flynt summary) and will require manual refactor as necessary.\
\
flynt summary:\
command - flynt openpilot\
\
summary:\
Execution time:                                     6.991s\
Files modified:                                      83\
Character count reduction:                 1315 (0.05%)\
\
Per expression type:\
Old style (`%`) expressions attempted:     132/262 (50.4%)\
`.format(...)` calls attempted:                     105/105 (100.0%)\
No concatenations attempted.\
F-string expressions created:                     218\
Out of all attempted transforms, 132 resulted in errors.\
\
\
**Verification** The refactor generated by flynt was tested against the openpilot "pre-commit run --all" command as outlined in docs/CONTRIBUTING.md. All tests passed except for the ccpcheck. pre-commit ran on macOS 10.15.7, Python 3.9. Unable to test locally as stated by **@adeebshihadeh** on [Discord](https://discord.com/channels/469524606043160576/524328425415245827/894310741337866261).\
-->\
\
\
\
\
flynt \'97-no-multiline \'97-transform-concats \'97exclude phonelibs pyextra}