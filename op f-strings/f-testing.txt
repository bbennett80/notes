Running flynt v.0.69
Running flynt in dry-run mode. No files will be changed.
fstringifying /Users/braandon/openpilot/tools/__init__.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/check_consumption.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/power_monitor.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/__init__.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/ignition.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/disable.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/enable_and_wait.py...no change
fstringifying /Users/braandon/openpilot/tools/zookeeper/test_zookeeper.py...no change
fstringifying /Users/braandon/openpilot/tools/plotjuggler/juggle.py...no change
fstringifying /Users/braandon/openpilot/tools/plotjuggler/test_plotjuggler.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"segment %d not found, got %d segments" % ( segment , len ( cameras ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"frame %d not found, got %d frames" % ( frame , fr . frame_count )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"_%d_%d.png" % ( segment , frame )'
--- /Users/braandon/openpilot/tools/scripts/fetch_image_from_route.py

+++ 

@@ -2,7 +2,7 @@

 import sys
 
 if len(sys.argv) < 4:
-  print("%s <route> <segment> <frame number>" % sys.argv[0])
+  print(f"{sys.argv[0]} <route> <segment> <frame number>")
   print('example: ./fetch_image_from_route.py "02c45f73a2e5c6e9|2020-06-01--18-03-08" 3 500')
   exit(0)
 
@@ -33,6 +33,6 @@

 im = Image.fromarray(fr.get(frame, count=1, pix_fmt="rgb24")[0])
 fn = "uxxx_"+route.replace("|", "_")+"_%d_%d.png" % (segment, frame)
 im.save(fn)
-print("saved %s" % fn)
+print(f"saved {fn}")
 
 
fstringifying /Users/braandon/openpilot/tools/scripts/fetch_image_from_route.py...modified
--- /Users/braandon/openpilot/tools/scripts/save_ubloxraw_stream.py

+++ 

@@ -52,7 +52,7 @@

           i += 1
     except StopIteration:
       print('All done')
-  print('Writed {} msgs'.format(i))
+  print(f'Writed {i} msgs')
 
 
 if __name__ == "__main__":
fstringifying /Users/braandon/openpilot/tools/scripts/save_ubloxraw_stream.py...modified
--- /Users/braandon/openpilot/tools/scripts/setup_ssh_keys.py

+++ 

@@ -7,7 +7,7 @@

 
 if __name__ == "__main__":
   if len(sys.argv) < 2:
-    print("%s <github username>" % sys.argv[0])
+    print(f"{sys.argv[0]} <github username>")
     exit(1)
 
   username = sys.argv[1]
fstringifying /Users/braandon/openpilot/tools/scripts/setup_ssh_keys.py...modified
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
fstringifying /Users/braandon/openpilot/tools/lib/auth.py...no change
--- /Users/braandon/openpilot/tools/lib/logreader.py

+++ 

@@ -26,7 +26,7 @@

   def _log_reader(self, i):
     if self._log_readers[i] is None and self._log_paths[i] is not None:
       log_path = self._log_paths[i]
-      print("LogReader:%s" % log_path)
+      print(f"LogReader:{log_path}")
       self._log_readers[i] = LogReader(log_path)
 
     return self._log_readers[i]
fstringifying /Users/braandon/openpilot/tools/lib/logreader.py...modified
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"  debug(%d): %s" % ( debug_type , debug_msg . strip ( ) )'
--- /Users/braandon/openpilot/tools/lib/url_file.py

+++ 

@@ -156,7 +156,7 @@

     if self._debug:
       t2 = time.time()
       if t2 - t1 > 0.1:
-        print("get %s %r %.f slow" % (self._url, headers, t2 - t1))
+        print(f"get {self._url} {headers!r} {t2 - t1:.f} slow")
 
     response_code = c.getinfo(pycurl.RESPONSE_CODE)
     if response_code == 416:  # Requested Range Not Satisfiable
fstringifying /Users/braandon/openpilot/tools/lib/url_file.py...modified
fstringifying /Users/braandon/openpilot/tools/lib/auth_config.py...no change
--- /Users/braandon/openpilot/tools/lib/route.py

+++ 

@@ -95,7 +95,7 @@

           if not seg_num.isdigit():
             continue
 
-          segment_name = '{}--{}'.format(self.route_name, seg_num)
+          segment_name = f'{self.route_name}--{seg_num}'
           for seg_f in os.listdir(os.path.join(fullpath, seg_num)):
             segment_files[segment_name].append((os.path.join(fullpath, seg_num, seg_f), seg_f))
 
@@ -125,7 +125,7 @@

       segments.append(RouteSegment(segment, log_path, qlog_path, camera_path, qcamera_path))
 
     if len(segments) == 0:
-      raise ValueError('Could not find segments for route {} in data directory {}'.format(self.route_name, data_dir))
+      raise ValueError(f'Could not find segments for route {self.route_name} in data directory {data_dir}')
     return sorted(segments, key=lambda seg: seg.canonical_name.segment_num)
 
 class RouteSegment(object):
fstringifying /Users/braandon/openpilot/tools/lib/route.py...modified
fstringifying /Users/braandon/openpilot/tools/lib/cache.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/__init__.py...no change
--- /Users/braandon/openpilot/tools/lib/framereader.py

+++ 

@@ -50,7 +50,7 @@

   with FileReader(fn) as f:
     header = f.read(4)
   if len(header) == 0:
-    raise DataUnreadableError("%s is empty" % fn)
+    raise DataUnreadableError(f"{fn} is empty")
   elif header == b"\x00\xc0\x12\x00":
     return FrameType.raw
   elif header == b"\x00\x00\x00\x01":
@@ -90,7 +90,7 @@

     try:
       subprocess.check_call([vidindex, typ, fn, prefix_f.name, index_f.name])
     except subprocess.CalledProcessError:
-      raise DataUnreadableError("vidindex failed on file %s" % fn)
+      raise DataUnreadableError(f"vidindex failed on file {fn}")
     with open(index_f.name, "rb") as f:
       index = f.read()
     with open(prefix_f.name, "rb") as f:
@@ -308,7 +308,7 @@

     assert num+count <= self.frame_count
 
     if pix_fmt not in ("yuv420p", "rgb24"):
-      raise ValueError("Unsupported pixel format %r" % pix_fmt)
+      raise ValueError(f"Unsupported pixel format {pix_fmt!r}")
 
     app = []
     for i in range(num, num+count):
@@ -548,10 +548,10 @@

     assert self.frame_count is not None
 
     if num + count > self.frame_count:
-      raise ValueError("{} > {}".format(num + count, self.frame_count))
+      raise ValueError(f"{num + count} > {self.frame_count}")
 
     if pix_fmt not in ("yuv420p", "rgb24", "yuv444p"):
-      raise ValueError("Unsupported pixel format %r" % pix_fmt)
+      raise ValueError(f"Unsupported pixel format {pix_fmt!r}")
 
     ret = [self._get_one(num + i, pix_fmt) for i in range(count)]
 
fstringifying /Users/braandon/openpilot/tools/lib/framereader.py...modified
--- /Users/braandon/openpilot/tools/lib/route_framereader.py

+++ 

@@ -22,7 +22,7 @@

       self[key] = frame_reader
       return frame_reader
     else:
-      raise KeyError("Segment index out of bounds: {}".format(key))
+      raise KeyError(f"Segment index out of bounds: {key}")
 
 
 class RouteFrameReader(object):
fstringifying /Users/braandon/openpilot/tools/lib/route_framereader.py...modified
fstringifying /Users/braandon/openpilot/tools/lib/api.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/kbhit.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/exceptions.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/filereader.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/lazy_property.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/tests/test_readers.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/tools/lib/tests/test_caching.py...no change
fstringifying /Users/braandon/openpilot/tools/replay/ui.py...no change
fstringifying /Users/braandon/openpilot/tools/replay/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"FRAME(%d) LAG -- %.2f ms" % ( frame_id , fr_time * 1000.0 )'
--- /Users/braandon/openpilot/tools/replay/unlogger.py

+++ 

@@ -282,7 +282,7 @@

             print("binding", typ)
             send_funcs[typ] = _get_address_send_func(address)
           except Exception as e:
-            print("couldn't replay {}: {}".format(typ, e))
+            print(f"couldn't replay {typ}: {e}")
             continue
         else:
           # Skip messages that we are not registered to publish.
@@ -346,7 +346,7 @@

 
   non_services = set(address_mapping) - set(service_list)
   if non_services:
-    print("WARNING: Unknown services {}".format(list(non_services)))
+    print(f"WARNING: Unknown services {list(non_services)}")
 
   return address_mapping
 
@@ -378,7 +378,7 @@

 
         q.send_pyobj(SeekAbsoluteTime(seek_time))
       except Exception as e:
-        print("Time not understood: {}".format(e))
+        print(f"Time not understood: {e}")
 
 def get_arg_parser():
   parser = argparse.ArgumentParser(
@@ -436,9 +436,9 @@

 def main(argv):
   args = get_arg_parser().parse_args(sys.argv[1:])
 
-  command_address = "ipc:///tmp/{}".format(uuid4())
-  forward_commands_address = "ipc:///tmp/{}".format(uuid4())
-  data_address = "ipc:///tmp/{}".format(uuid4())
+  command_address = f"ipc:///tmp/{uuid4()}"
+  forward_commands_address = f"ipc:///tmp/{uuid4()}"
+  data_address = f"ipc:///tmp/{uuid4()}"
 
   address_mapping = _get_address_mapping(args)
 
fstringifying /Users/braandon/openpilot/tools/replay/unlogger.py...modified
fstringifying /Users/braandon/openpilot/tools/replay/camera.py...no change
fstringifying /Users/braandon/openpilot/tools/replay/unlog_ci_segment.py...no change
fstringifying /Users/braandon/openpilot/tools/replay/rqplot.py...no change
fstringifying /Users/braandon/openpilot/tools/replay/can_replay.py...no change
--- /Users/braandon/openpilot/tools/replay/lib/ui_helpers.py

+++ 

@@ -140,7 +140,7 @@

       plots.append(plot)
       idxs.append(name_to_arr_idx[item])
       plot_select.append(i)
-    axs[i].set_title(", ".join("%s (%s)" % (nm, cl)
+    axs[i].set_title(", ".join(f"{nm} ({cl})"
                                for (nm, cl) in zip(pl_list, plot_colors[i])), fontsize=10)
     axs[i].tick_params(axis="x", colors="white")
     axs[i].tick_params(axis="y", colors="white")
fstringifying /Users/braandon/openpilot/tools/replay/lib/ui_helpers.py...modified
fstringifying /Users/braandon/openpilot/tools/replay/lib/__init__.py...no change
fstringifying /Users/braandon/openpilot/tools/joystick/joystickd.py...no change
fstringifying /Users/braandon/openpilot/tools/sim/bridge.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''%d axes found: %s' % ( num_axes , ', ' . join ( axis_map ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''%d buttons found: %s' % ( num_buttons , ', ' . join ( button_map ) )'
--- /Users/braandon/openpilot/tools/sim/lib/manual_ctrl.py

+++ 

@@ -10,7 +10,7 @@

 print('Available devices:')
 for fn in os.listdir('/dev/input'):
     if fn.startswith('js'):
-        print('  /dev/input/%s' % (fn))
+        print(f'  /dev/input/{fn}')
 
 # We'll store the states here.
 axis_states = {}
@@ -94,7 +94,7 @@

 def wheel_poll_thread(q: 'Queue[str]') -> NoReturn:
   # Open the joystick device.
   fn = '/dev/input/js0'
-  print('Opening %s...' % fn)
+  print(f'Opening {fn}...')
   jsdev = open(fn, 'rb')
 
   # Get the device name.
@@ -102,7 +102,7 @@

   buf = array.array('B', [0] * 64)
   ioctl(jsdev, 0x80006a13 + (0x10000 * len(buf)), buf)  # JSIOCGNAME(len)
   js_name = buf.tobytes().rstrip(b'\x00').decode('utf-8')
-  print('Device name: %s' % js_name)
+  print(f'Device name: {js_name}')
 
   # Get number of axes and buttons.
   buf = array.array('B', [0])
@@ -118,7 +118,7 @@

   ioctl(jsdev, 0x80406a32, buf)  # JSIOCGAXMAP
 
   for _axis in buf[:num_axes]:
-      axis_name = axis_names.get(_axis, 'unknown(0x%02x)' % _axis)
+      axis_name = axis_names.get(_axis, f'unknown(0x{_axis:02x})')
       axis_map.append(axis_name)
       axis_states[axis_name] = 0.0
 
@@ -127,7 +127,7 @@

   ioctl(jsdev, 0x80406a34, buf)  # JSIOCGBTNMAP
 
   for btn in buf[:num_buttons]:
-      btn_name = button_names.get(btn, 'unknown(0x%03x)' % btn)
+      btn_name = button_names.get(btn, f'unknown(0x{btn:03x})')
       button_map.append(btn_name)
       button_states[btn_name] = 0
 
@@ -153,19 +153,19 @@

         fvalue = value / 32767.0
         axis_states[axis] = fvalue
         normalized = (1 - fvalue) * 50
-        q.put("throttle_%f" % normalized)
+        q.put(f"throttle_{normalized:f}")
 
       elif axis == "rz":  # brake
         fvalue = value / 32767.0
         axis_states[axis] = fvalue
         normalized = (1 - fvalue) * 50
-        q.put("brake_%f" % normalized)
+        q.put(f"brake_{normalized:f}")
 
       elif axis == "x":  # steer angle
         fvalue = value / 32767.0
         axis_states[axis] = fvalue
         normalized = fvalue
-        q.put("steer_%f" % normalized)
+        q.put(f"steer_{normalized:f}")
 
     elif mtype & 0x01:  # buttons
       if value == 1: # press down
fstringifying /Users/braandon/openpilot/tools/sim/lib/manual_ctrl.py...modified
fstringifying /Users/braandon/openpilot/tools/sim/lib/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"TRACK_%d" % i'
fstringifying /Users/braandon/openpilot/tools/sim/lib/can.py...no change
fstringifying /Users/braandon/openpilot/tools/sim/lib/keyboard_ctrl.py...no change
fstringifying /Users/braandon/openpilot/tools/webcam/warp_vis.py...no change
fstringifying /Users/braandon/openpilot/tools/webcam/front_mount_helper.py...no change
Skipping fstrings transform of file /Users/braandon/openpilot/pyextra/acados_template/acados_sim_solver.py due to unknown encoding: future_fstrings.
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_sim_solver.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_external_cost.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_explicit_ode.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/__init__.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_model.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_gnsf.py...no change
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
--- /Users/braandon/openpilot/pyextra/acados_template/utils.py

+++ 

@@ -48,7 +48,7 @@

         acados_path = os.path.join(acados_template_path, '../../../')
         ACADOS_PATH = os.path.realpath(acados_path)
         msg = 'Warning: Did not find environment variable ACADOS_SOURCE_DIR, '
-        msg += 'guessed ACADOS_PATH to be {}.\n'.format(ACADOS_PATH)
+        msg += f'guessed ACADOS_PATH to be {ACADOS_PATH}.\n'
         msg += 'Please export ACADOS_SOURCE_DIR to not avoid this warning.'
         print(msg)
     return ACADOS_PATH
@@ -70,10 +70,10 @@

 
 def casadi_version_warning(casadi_version):
     msg =  'Warning: Please note that the following versions of CasADi  are '
-    msg += 'officially supported: {}.\n '.format(" or ".join(ALLOWED_CASADI_VERSIONS))
+    msg += f"officially supported: {' or '.join(ALLOWED_CASADI_VERSIONS)}.\n "
     msg += 'If there is an incompatibility with the CasADi generated code, '
     msg += 'please consider changing your CasADi version.\n'
-    msg += 'Version {} currently in use.'.format(casadi_version)
+    msg += f'Version {casadi_version} currently in use.'
     print(msg)
 
 
@@ -134,7 +134,7 @@

     elif isinstance(x, SX):
         symbol = SX.sym
     else:
-        raise Exception("model.x must be casadi.SX or casadi.MX, got {}".format(type(x)))
+        raise Exception(f"model.x must be casadi.SX or casadi.MX, got {type(x)}")
 
     if is_empty(p):
         model.p = symbol('p', 0, 0)
@@ -157,24 +157,24 @@

         repo_url, TERA_VERSION, TERA_VERSION, platform2tera[sys.platform])
 
     manual_install = 'For manual installation follow these instructions:\n'
-    manual_install += '1 Download binaries from {}\n'.format(url)
-    manual_install += '2 Copy them in {}/bin\n'.format(acados_path)
+    manual_install += f'1 Download binaries from {url}\n'
+    manual_install += f'2 Copy them in {acados_path}/bin\n'
     manual_install += '3 Strip the version and platform from the binaries: '
     manual_install += 'as t_renderer-v0.0.34-X -> t_renderer)\n'
     manual_install += '4 Enable execution privilege on the file "t_renderer" with:\n'
-    manual_install += '"chmod +x {}"\n\n'.format(tera_path)
+    manual_install += f'"chmod +x {tera_path}"\n\n'
 
     msg = "\n"
     msg += 'Tera template render executable not found, '
-    msg += 'while looking in path:\n{}\n'.format(tera_path)
+    msg += f'while looking in path:\n{tera_path}\n'
     msg += 'In order to be able to render the templates, '
     msg += 'you need to download the tera renderer binaries from:\n'
-    msg += '{}\n\n'.format(repo_url)
+    msg += f'{repo_url}\n\n'
     msg += 'Do you wish to set up Tera renderer automatically?\n'
     msg += 'y/N? (press y to download tera or any key for manual installation)\n'
 
     if input(msg) == 'y':
-        print("Dowloading {}".format(url))
+        print(f"Dowloading {url}")
         with urllib.request.urlopen(url) as response, open(tera_path, 'wb') as out_file:
             shutil.copyfileobj(response, out_file)
         print("Successfully downloaded t_renderer.")
@@ -204,16 +204,10 @@

     acados_template_path = acados_path + '/c_templates_tera'
 
     # call tera as system cmd
-    os_cmd = "{tera_path} '{template_glob}' '{in_file}' '{json_path}' '{out_file}'".format(
-        tera_path=tera_path,
-        template_glob=template_glob,
-        json_path=json_path,
-        in_file=in_file,
-        out_file=out_file
-    )
+    os_cmd = f"{tera_path} '{template_glob}' '{in_file}' '{json_path}' '{out_file}'"
     status = os.system(os_cmd)
     if (status != 0):
-        raise Exception('Rendering of {} failed! Exiting.\n'.format(in_file))
+        raise Exception(f'Rendering of {in_file} failed! Exiting.\n')
 
     os.chdir(cwd)
 
@@ -228,7 +222,7 @@

         return np_array.full()
     else:
         raise(Exception(
-            "Cannot convert to list type {}".format(type(np_array))
+            f"Cannot convert to list type {type(np_array)}"
         ))
 
 
fstringifying /Users/braandon/openpilot/pyextra/acados_template/utils.py...modified
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_implicit_ode.py...no change
Skipping fstrings transform of file /Users/braandon/openpilot/pyextra/acados_template/acados_ocp.py due to unknown encoding: future_fstrings.
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_ocp.py...no change
--- /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_discrete_dynamics.py

+++ 

@@ -57,7 +57,7 @@

     elif isinstance(phi, casadi.SX):
         symbol = SX.sym
     else:
-        Exception("generate_c_code_disc_dyn: disc_dyn_expr must be a CasADi expression, you have type: {}".format(type(phi)))
+        Exception(f"generate_c_code_disc_dyn: disc_dyn_expr must be a CasADi expression, you have type: {type(phi)}")
 
     # assume nx1 = nx !!!
     lam = symbol('lam', nx, 1)
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_discrete_dynamics.py...modified
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
--- /Users/braandon/openpilot/pyextra/acados_template/acados_ocp_solver_fast.py

+++ 

@@ -142,7 +142,7 @@

                 # Get elements in column major order
                 value_ = np.ravel(value_, order='F')
             else:
-                raise Exception("Unknown api: '{}'".format(api))
+                raise Exception(f"Unknown api: '{api}'")
 
         if value_shape != expected_shape:
             raise Exception('AcadosOcpSolver.cost_set(): mismatching dimension',
@@ -217,7 +217,7 @@

                 # Get elements in column major order
                 value_ = np.ravel(value_, order='F')
             else:
-                raise Exception("Unknown api: '{}'".format(api))
+                raise Exception(f"Unknown api: '{api}'")
         if value_shape != expected_shape:
             raise Exception('AcadosOcpSolver.constraints_set(): mismatching dimension' \
                 ' for field "{}" with dimension {} (you have {})'.format(field_, expected_shape, value_shape))
@@ -289,8 +289,8 @@

                 self.nlp_dims, self.nlp_out, stage_, field)
 
             if value_.shape[0] != dims:
-                msg = 'AcadosOcpSolver.set(): mismatching dimension for field "{}" '.format(field_)
-                msg += 'with dimension {} (you have {})'.format(dims, value_.shape)
+                msg = f'AcadosOcpSolver.set(): mismatching dimension for field "{field_}" '
+                msg += f'with dimension {dims} (you have {value_.shape})'
                 raise Exception(msg)
 
             value_data = cast(value_.ctypes.data, POINTER(c_double))
@@ -357,7 +357,7 @@

             raise Exception('AcadosOcpSolver.get_slice(): end stage index must be larger than start stage index')
 
         if start_stage_ < 0 or end_stage_ > self.N + 1:
-            raise Exception('AcadosOcpSolver.get_slice(): stage index must be in [0, N], got: {}.'.format(self.N))
+            raise Exception(f'AcadosOcpSolver.get_slice(): stage index must be in [0, N], got: {self.N}.')
         self.shared_lib.ocp_nlp_dims_get_from_attr.argtypes = \
             [c_void_p, c_void_p, c_void_p, c_int, c_char_p]
         self.shared_lib.ocp_nlp_dims_get_from_attr.restype = c_int
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_ocp_solver_fast.py...modified
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_nls_cost.py...no change
Skipping fstrings transform of file /Users/braandon/openpilot/pyextra/acados_template/acados_sim.py due to unknown encoding: future_fstrings.
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_sim.py...no change
fstringifying /Users/braandon/openpilot/pyextra/acados_template/generate_c_code_constraint.py...no change
Skipping fstrings transform of file /Users/braandon/openpilot/pyextra/acados_template/acados_ocp_solver.py due to unknown encoding: future_fstrings.
fstringifying /Users/braandon/openpilot/pyextra/acados_template/acados_ocp_solver.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/swaglog.py...no change
--- /Users/braandon/openpilot/selfdrive/updated.py

+++ 

@@ -309,7 +309,7 @@

   new_version = cur_hash != upstream_hash
   git_fetch_result = check_git_fetch_result(git_fetch_output)
 
-  cloudlog.info("comparing %s to %s" % (cur_hash, upstream_hash))
+  cloudlog.info(f"comparing {cur_hash} to {upstream_hash}")
   if new_version or git_fetch_result:
     cloudlog.info("Running update")
 
fstringifying /Users/braandon/openpilot/selfdrive/updated.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/config.py...no change
--- /Users/braandon/openpilot/selfdrive/version.py

+++ 

@@ -100,9 +100,9 @@

   params.put("TermsVersion", terms_version)
   params.put("TrainingVersion", training_version)
 
-  print("Dirty: %s" % dirty)
-  print("Version: %s" % version)
-  print("Remote: %s" % origin)
-  print("Branch: %s" % branch)
-  print("Prebuilt: %s" % prebuilt)
+  print(f"Dirty: {dirty}")
+  print(f"Version: {version}")
+  print(f"Remote: {origin}")
+  print(f"Branch: {branch}")
+  print(f"Prebuilt: {prebuilt}")
 
fstringifying /Users/braandon/openpilot/selfdrive/version.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/crash.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/rtshield.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/logmessaged.py...no change
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
fstringifying /Users/braandon/openpilot/selfdrive/pandad.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/timezoned.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/tombstoned.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/ui/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/ui/tests/test_sounds.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/ui/tests/cycle_offroad_alerts.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/ui/tests/test_sound_stability.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/ui/qt/maps/set_destination.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/interfaces.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/vin.py...no change
--- /Users/braandon/openpilot/selfdrive/car/fw_versions.py

+++ 

@@ -330,7 +330,7 @@

   print("Getting vin...")
   addr, vin = get_vin(logcan, sendcan, 1, retry=10, debug=args.debug)
   print(f"VIN: {vin}")
-  print("Getting VIN took %.3f s" % (time.time() - t))
+  print(f"Getting VIN took {time.time() - t:.3f} s")
   print()
 
   t = time.time()
@@ -347,5 +347,5 @@

 
   print()
   print("Possible matches:", candidates)
-  print("Getting fw took %.3f s" % (time.time() - t))
-
+  print(f"Getting fw took {time.time() - t:.3f} s")
+
fstringifying /Users/braandon/openpilot/selfdrive/car/fw_versions.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/car/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/disable_ecu.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/isotp_parallel_query.py...no change
--- /Users/braandon/openpilot/selfdrive/car/fingerprints.py

+++ 

@@ -11,7 +11,7 @@

   for car_folder in [x[0] for x in os.walk(BASEDIR + '/selfdrive/car')]:
     try:
       car_name = car_folder.split('/')[-1]
-      values = __import__('selfdrive.car.%s.values' % car_name, fromlist=[attr])
+      values = __import__(f'selfdrive.car.{car_name}.values', fromlist=[attr])
       if hasattr(values, attr):
         attr_values = getattr(values, attr)
       else:
fstringifying /Users/braandon/openpilot/selfdrive/car/fingerprints.py...modified
--- /Users/braandon/openpilot/selfdrive/car/car_helpers.py

+++ 

@@ -39,7 +39,7 @@

 def load_interfaces(brand_names):
   ret = {}
   for brand_name in brand_names:
-    path = ('selfdrive.car.%s' % brand_name)
+    path = f'selfdrive.car.{brand_name}'
     CarInterface = __import__(path + '.interface', fromlist=['CarInterface']).CarInterface
 
     if os.path.exists(BASEDIR + '/' + path.replace('.', '/') + '/carstate.py'):
@@ -65,7 +65,7 @@

   for car_folder in [x[0] for x in os.walk(BASEDIR + '/selfdrive/car')]:
     try:
       brand_name = car_folder.split('/')[-1]
-      model_names = __import__('selfdrive.car.%s.values' % brand_name, fromlist=['CAR']).CAR
+      model_names = __import__(f'selfdrive.car.{brand_name}.values', fromlist=['CAR']).CAR
       model_names = [getattr(model_names, c) for c in model_names.__dict__.keys() if not c.startswith("__")]
       brand_names[brand_name] = model_names
     except (ImportError, IOError):
fstringifying /Users/braandon/openpilot/selfdrive/car/car_helpers.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/carstate.py...no change
--- /Users/braandon/openpilot/selfdrive/car/volkswagen/interface.py

+++ 

@@ -136,7 +136,7 @@

       ret.wheelbase = 2.84
 
     else:
-      raise ValueError("unsupported car %s" % candidate)
+      raise ValueError(f"unsupported car {candidate}")
 
     ret.rotationalInertia = scale_rot_inertia(ret.mass, ret.wheelbase)
     ret.centerToFront = ret.wheelbase * 0.45
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/interface.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/volkswagencan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/volkswagen/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/fordcan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/ford/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/mazdacan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mazda/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mock/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mock/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mock/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/mock/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tests/test_fw_fingerprint.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tests/__init__.py...no change
--- /Users/braandon/openpilot/selfdrive/car/tests/test_car_interfaces.py

+++ 

@@ -59,7 +59,7 @@

       car_interface.apply(CC)
 
     # Test radar interface
-    RadarInterface = importlib.import_module('selfdrive.car.%s.radar_interface' % car_params.carName).RadarInterface
+    RadarInterface = importlib.import_module(f'selfdrive.car.{car_params.carName}.radar_interface').RadarInterface
     radar_interface = RadarInterface(car_params)
     assert radar_interface
 
fstringifying /Users/braandon/openpilot/selfdrive/car/tests/test_car_interfaces.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/teslacan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/tesla/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/hyundaican.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/hyundai/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/toyotacan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/toyota/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/nissancan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/nissan/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/subarucan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/subaru/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/gmcan.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/gm/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/chryslercan.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"radar received unexpected address %d" % address'
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/chrysler/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/values.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/carstate.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/hondacan.py...no change
--- /Users/braandon/openpilot/selfdrive/car/honda/interface.py

+++ 

@@ -279,7 +279,7 @@

       ret.lateralTuning.pid.kpV, ret.lateralTuning.pid.kiV = [[0.6], [0.18]] # TODO: can probably use some tuning
 
     else:
-      raise ValueError("unsupported car %s" % candidate)
+      raise ValueError(f"unsupported car {candidate}")
 
     # These cars use alternate user brake msg (0x1BE)
     if candidate in HONDA_BOSCH_ALT_BRAKE_SIGNAL:
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/interface.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/radar_interface.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/car/honda/carcontroller.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/base.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/pc/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%015d" % random . randint ( 0 , 1 << 32 )'
fstringifying /Users/braandon/openpilot/selfdrive/hardware/pc/hardware.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/amplifier.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/iwlist.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/agnos.py...no change
--- /Users/braandon/openpilot/selfdrive/hardware/tici/power_monitor.py

+++ 

@@ -40,7 +40,7 @@

       power_average = average(power_average, power)
       power_total_average = average(power_total_average, power_total)
 
-      print("%12.2f mW %12.2f mW %12.2f mW" % (power, power_total, power_total-power))
+      print(f"{power:12.2f} mW {power_total:12.2f} mW {power_total - power:12.2f} mW")
       time.sleep(0.25)
   finally:
     stop_time = time.monotonic()
@@ -48,7 +48,7 @@

     voltage = voltage_average[0]
     current = current_average[0]
     power = power_average[0]
-    print("%.2f volts %12.2f ma %12.2f mW %12.2f mW" % (voltage, current, power, power_total))
-    print("  {:.2f} Seconds     {} samples".format(stop_time - start_time, voltage_average[1]))
+    print(f"{voltage:.2f} volts {current:12.2f} ma {power:12.2f} mW {power_total:12.2f} mW")
+    print(f"  {stop_time - start_time:.2f} Seconds     {voltage_average[1]} samples")
     print("----------------------------------------------------------------")
 
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/power_monitor.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/pins.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/tici/hardware.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/eon/test_neos_updater.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/eon/neos.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/eon/androidd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/eon/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/hardware/eon/hardware.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/logcatd/tests/test_logcatd_android.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/test_updated.py...no change
--- /Users/braandon/openpilot/selfdrive/test/update_ci_routes.py

+++ 

@@ -25,7 +25,7 @@

     "azcopy",
     "copy",
     f"{path}/*",
-    "https://{}.blob.core.windows.net/{}/{}?{}".format(_DATA_ACCOUNT_CI, "openpilotci", destpath, DEST_KEY),
+    f"https://{_DATA_ACCOUNT_CI}.blob.core.windows.net/openpilotci/{destpath}?{DEST_KEY}",
     "--recursive=false",
     "--overwrite=false",
     "--exclude-pattern=*/dcamera.hevc",
@@ -46,8 +46,8 @@

     cmd = [
       "azcopy",
       "copy",
-      "https://{}.blob.core.windows.net/{}/{}?{}".format(source_account, source_bucket, key_prefix, source_key),
-      "https://{}.blob.core.windows.net/{}/{}?{}".format(_DATA_ACCOUNT_CI, "openpilotci", dongle_id, DEST_KEY),
+      f"https://{source_account}.blob.core.windows.net/{source_bucket}/{key_prefix}?{source_key}",
+      f"https://{_DATA_ACCOUNT_CI}.blob.core.windows.net/openpilotci/{dongle_id}?{DEST_KEY}",
       "--recursive=true",
       "--overwrite=false",
       "--exclude-pattern=*/dcamera.hevc",
fstringifying /Users/braandon/openpilot/selfdrive/test/update_ci_routes.py...modified
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"CAN ignition dedicated msg %d with len %d found in %s fingerprints!" % ( msg_can [ 0 ] , msg_can [ 1 ] , brands [ i ] )'
Not converting code '"%d: %d" % v': This expression involves tuple unpacking.
Not converting code '"%d: %d" % v': This expression involves tuple unpacking.
--- /Users/braandon/openpilot/selfdrive/test/test_fingerprints.py

+++ 

@@ -18,7 +18,7 @@

   for car_folder in [x[0] for x in os.walk(BASEDIR + '/selfdrive/car')]:
     car_name = car_folder.split('/')[-1]
     try:
-      fingerprints[car_name] = __import__('selfdrive.car.%s.values' % car_name, fromlist=['FINGERPRINTS']).FINGERPRINTS
+      fingerprints[car_name] = __import__(f'selfdrive.car.{car_name}.values', fromlist=['FINGERPRINTS']).FINGERPRINTS
     except (ImportError, IOError, AttributeError):
       pass
 
@@ -78,14 +78,14 @@

   for idx2, f2 in enumerate(fingerprints_flat):
     if idx1 < idx2 and not check_fingerprint_consistency(f1, f2):
       valid = False
-      print("Those two fingerprints are inconsistent {0} {1}".format(car_names[idx1], car_names[idx2]))
+      print(f"Those two fingerprints are inconsistent {car_names[idx1]} {car_names[idx2]}")
       print("")
       print(', '.join("%d: %d" % v for v in sorted(f1.items())))
       print("")
       print(', '.join("%d: %d" % v for v in sorted(f2.items())))
       print("")
 
-print("Found {0} individual fingerprints".format(len(fingerprints_flat)))
+print(f"Found {len(fingerprints_flat)} individual fingerprints")
 if not valid or len(fingerprints_flat) == 0:
   print("TEST FAILED")
   sys.exit(1)
fstringifying /Users/braandon/openpilot/selfdrive/test/test_fingerprints.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/test/model_test.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/test_onroad.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/test_routes.py...no change
--- /Users/braandon/openpilot/selfdrive/test/openpilotci.py

+++ 

@@ -9,7 +9,7 @@

 
 def get_url(route_name, segment_num, log_type="rlog"):
   ext = "hevc" if log_type in ["fcamera", "dcamera"] else "bz2"
-  return BASE_URL + "%s/%s/%s.%s" % (route_name.replace("|", "/"), segment_num, log_type, ext)
+  return BASE_URL + f"{route_name.replace('|', '/')}/{segment_num}/{log_type}.{ext}"
 
 def upload_file(path, name):
   from azure.storage.blob import BlockBlobService
fstringifying /Users/braandon/openpilot/selfdrive/test/openpilotci.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/test/test_valgrind_replay.py...no change
--- /Users/braandon/openpilot/selfdrive/test/test_models.py

+++ 

@@ -114,7 +114,7 @@

 
   def test_radar_interface(self):
     os.environ['NO_RADAR_SLEEP'] = "1"
-    RadarInterface = importlib.import_module('selfdrive.car.%s.radar_interface' % self.CP.carName).RadarInterface
+    RadarInterface = importlib.import_module(f'selfdrive.car.{self.CP.carName}.radar_interface').RadarInterface
     RI = RadarInterface(self.CP)
     assert RI
 
fstringifying /Users/braandon/openpilot/selfdrive/test/test_models.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/test/helpers.py...no change
Skipping conversion due to line length limit. Pass -ll 999 to increase it. (999 is an example, as number of characters.)
fstringifying /Users/braandon/openpilot/selfdrive/test/longitudinal_maneuvers/plant.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/longitudinal_maneuvers/test_longitudinal.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/longitudinal_maneuvers/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/longitudinal_maneuvers/maneuver.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/regen_all.py...no change
--- /Users/braandon/openpilot/selfdrive/test/process_replay/test_processes.py

+++ 

@@ -72,7 +72,7 @@

           break
     else:
       segment = cmp_log_fn.split("/")[-1].split("_")[0]
-      raise Exception("Route never enabled: %s" % segment)
+      raise Exception(f"Route never enabled: {segment}")
 
   try:
     return compare_logs(cmp_log_msgs, log_msgs, ignore_fields+cfg.ignore, ignore_msgs, cfg.tolerance)
@@ -81,30 +81,30 @@

 
 def format_diff(results, ref_commit):
   diff1, diff2 = "", ""
-  diff2 += "***** tested against commit %s *****\n" % ref_commit
+  diff2 += f"***** tested against commit {ref_commit} *****\n"
 
   failed = False
   for segment, result in list(results.items()):
-    diff1 += "***** results for segment %s *****\n" % segment
-    diff2 += "***** differences for segment %s *****\n" % segment
+    diff1 += f"***** results for segment {segment} *****\n"
+    diff2 += f"***** differences for segment {segment} *****\n"
 
     for proc, diff in list(result.items()):
-      diff1 += "\t%s\n" % proc
-      diff2 += "*** process: %s ***\n" % proc
+      diff1 += f"\t{proc}\n"
+      diff2 += f"*** process: {proc} ***\n"
 
       if isinstance(diff, str):
-        diff1 += "\t\t%s\n" % diff
+        diff1 += f"\t\t{diff}\n"
         failed = True
       elif len(diff):
         cnt = {}
         for d in diff:
-          diff2 += "\t%s\n" % str(d)
+          diff2 += f"\t{str(d)}\n"
 
           k = str(d[1])
           cnt[k] = 1 if k not in cnt else cnt[k] + 1
 
         for k, v in sorted(cnt.items()):
-          diff1 += "\t\t%s: %s\n" % (k, v)
+          diff1 += f"\t\t{k}: {v}\n"
         failed = True
   return diff1, diff2, failed
 
@@ -137,13 +137,13 @@

     print("couldn't find reference commit")
     sys.exit(1)
 
-  print("***** testing against commit %s *****" % ref_commit)
+  print(f"***** testing against commit {ref_commit} *****")
 
   # check to make sure all car brands are tested
   if FULL_TEST:
     tested_cars = set(c.lower() for c, _ in segments)
     untested = (set(interface_names) - set(excluded_interfaces)) - tested_cars
-    assert len(untested) == 0, "Cars missing routes: %s" % (str(untested))
+    assert len(untested) == 0, f"Cars missing routes: {str(untested)}"
 
   results: Any = {}
   for car_brand, segment in segments:
@@ -151,7 +151,7 @@

        (not cars_whitelisted and car_brand.upper() in args.blacklist_cars):
       continue
 
-    print("***** testing route segment %s *****\n" % segment)
+    print(f"***** testing route segment {segment} *****\n")
 
     results[segment] = {}
 
@@ -163,7 +163,7 @@

          (not procs_whitelisted and cfg.proc_name in args.blacklist_procs):
         continue
 
-      cmp_log_fn = os.path.join(process_replay_dir, "%s_%s_%s.bz2" % (segment, cfg.proc_name, ref_commit))
+      cmp_log_fn = os.path.join(process_replay_dir, f"{segment}_{cfg.proc_name}_{ref_commit}.bz2")
       results[segment][cfg.proc_name] = test_process(cfg, lr, cmp_log_fn, args.ignore_fields, args.ignore_msgs)
 
   diff1, diff2, failed = format_diff(results, ref_commit)
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/test_processes.py...modified
--- /Users/braandon/openpilot/selfdrive/test/process_replay/update_refs.py

+++ 

@@ -28,7 +28,7 @@

 
     for cfg in CONFIGS:
       log_msgs = replay_process(cfg, lr)
-      log_fn = os.path.join(process_replay_dir, "%s_%s_%s.bz2" % (segment, cfg.proc_name, ref_commit))
+      log_fn = os.path.join(process_replay_dir, f"{segment}_{cfg.proc_name}_{ref_commit}.bz2")
       save_log(log_fn, log_msgs)
 
       if not no_upload:
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/update_refs.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"modeld replay %d/%d" % ( frame_idx , fr . frame_count )'
--- /Users/braandon/openpilot/selfdrive/test/process_replay/model_replay.py

+++ 

@@ -109,7 +109,7 @@

   failed = False
   if not update:
     ref_commit = open(ref_commit_fn).read().strip()
-    log_fn = "%s_%s_%s.bz2" % (TEST_ROUTE, "model", ref_commit)
+    log_fn = f"{TEST_ROUTE}_{'model'}_{ref_commit}.bz2"
     cmp_log = LogReader(BASE_URL + log_fn)
 
     ignore = ['logMonoTime', 'valid',
@@ -136,7 +136,7 @@

     print("Uploading new refs")
 
     new_commit = get_git_commit()
-    log_fn = "%s_%s_%s.bz2" % (TEST_ROUTE, "model", new_commit)
+    log_fn = f"{TEST_ROUTE}_{'model'}_{new_commit}.bz2"
     save_log(log_fn, log_msgs)
     try:
       upload_file(log_fn, os.path.basename(log_fn))
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/model_replay.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/test_fuzzy.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/regen.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/compare_logs.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/process_replay/process_replay.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/profiling/lib.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/profiling/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/test/profiling/profiler.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/paramsd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/calibrationd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/test_calibrationd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/test_locationd.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"Sats: %d   Accuracy: %.2f m   cnos" % ( ug . measurementReport . numMeas , gle . accuracy )'
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/print_gps_stats.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/__init__.py...no change
Failed to parse transformed code 'f"\"{''.join('\\\\x{:02X}'.format(b) for b in s)}\"s"' given original ''"{}"s' . format ( '' . join ( '\\x{:02X}' . format ( b ) for b in s ) )'
f-string expression part cannot include a backslash (<unknown>, line 1)
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/ubloxd.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%s INVALID_SIZE1=%u" % ( self . name , len ( buf ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"EXTRA_BYTES=%u" % len ( buf )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"INVALID_SIZE=%u, " % len ( buf )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"EXTRA_BYTES=%u" % len ( buf )'
Failed to parse transformed code 'f"{f}=\"{v.rstrip(' \\x00')}\", "' given original ''%s="%s", ' % ( f , v . rstrip ( ' \0' ) )'
f-string expression part cannot include a backslash (<unknown>, line 1)
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''UBloxMessage(UNKNOWN %s, %u)' % ( str ( type ) , self . msg_length ( ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''UBloxMessage(UNKNOWN %s, %u)' % ( str ( type ) , self . msg_length ( ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''Unknown message %s length=%u' % ( str ( type ) , len ( self . _buf ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code ''Unknown message %s length=%u' % ( str ( type ) , len ( self . _buf ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"bad checksum len=%u needed=%u" % ( len ( self . _buf ) , self . needed_bytes ( ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"bad len len=%u needed=%u" % ( len ( self . _buf ) , self . needed_bytes ( ) )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"try set binary at %u" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,0,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,1,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,2,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,3,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,4,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"$PUBX,41,5,0007,0001,%u,0" % self . baudrate'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"Setting dgpsTimeOut=%u" % msg . dgpsTimeOut'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"dropping %d bytes" % len ( msg . _buf )'
--- /Users/braandon/openpilot/selfdrive/locationd/test/ublox.py

+++ 

@@ -333,19 +333,19 @@

         continue
       v = msg._fields[fieldname]
       if isinstance(v, list):
-        ret += '%s=[' % fieldname
+        ret += f'{fieldname}=['
         for a in range(alen):
-          ret += '%s, ' % v[a]
+          ret += f'{v[a]}, '
         ret = ret[:-2] + '], '
       elif isinstance(v, str):
         ret += '%s="%s", ' % (f, v.rstrip(' \0'))
       else:
-        ret += '%s=%s, ' % (f, v)
+        ret += f'{f}={v}, '
     for r in msg._recs:
       ret += '[ '
       for f in self.fields2:
         v = r[f]
-        ret += '%s=%s, ' % (f, v)
+        ret += f'{f}={v}, '
       ret = ret[:-2] + ' ], '
     return ret[:-2]
 
@@ -608,7 +608,7 @@

       raise UBloxError('INVALID MESSAGE')
     type = self.msg_type()
     if type not in msg_types:
-      raise UBloxError('Unknown message %s' % str(type))
+      raise UBloxError(f'Unknown message {str(type)}')
     msg_types[type].pack(self)
 
   def name(self):
@@ -783,7 +783,7 @@

 
   def send_nmea(self, msg):
     if not self.read_only:
-      s = msg + "*%02X" % self.nmea_checksum(msg) + "\r\n"
+      s = msg + f"*{self.nmea_checksum(msg):02X}" + "\r\n"
       self.write(s)
 
   def set_binary(self):
fstringifying /Users/braandon/openpilot/selfdrive/locationd/test/ublox.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/live_kf.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/constants.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/gnss_kf.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/car_kf.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/locationd/models/loc_kf.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/boardd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/set_time.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/tests/test_boardd_api.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"sent %3d (%3d/%3d/%3d) got %3d (%3d/%3d/%3d)" % ( len ( snd ) , snd_0 , snd_1 , snd_2 , len ( can_msgs ) , got_0 , got_1 , got_2 )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"got %d" % ( len ( can_msgs ) )'
fstringifying /Users/braandon/openpilot/selfdrive/boardd/tests/boardd_old.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/tests/test_boardd_loopback.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%d senders found. Starting broadcast" % num_senders'
fstringifying /Users/braandon/openpilot/selfdrive/boardd/tests/replay_many.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/boardd/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/thermald/thermald.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/thermald/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/thermald/power_monitoring.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/thermald/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/thermald/tests/test_power_monitoring.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/__init__.py...no change
--- /Users/braandon/openpilot/selfdrive/controls/radard.py

+++ 

@@ -183,7 +183,7 @@

 
   # import the radar from the fingerprint
   cloudlog.info("radard is importing %s", CP.carName)
-  RadarInterface = importlib.import_module('selfdrive.car.%s.radar_interface' % CP.carName).RadarInterface
+  RadarInterface = importlib.import_module(f'selfdrive.car.{CP.carName}.radar_interface').RadarInterface
 
   # *** setup messaging
   if can_sock is None:
fstringifying /Users/braandon/openpilot/selfdrive/controls/radard.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/controls/plannerd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/controlsd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_following_distance.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_lateral_mpc.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_startup.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%s @%d not in EVENTS" % ( name , e )'
--- /Users/braandon/openpilot/selfdrive/controls/tests/test_alerts.py

+++ 

@@ -70,7 +70,7 @@

 
         font = fonts[alert.alert_size][i]
         w, _ = draw.textsize(txt, font)
-        msg = "type: %s msg: %s" % (alert.alert_type, txt)
+        msg = f"type: {alert.alert_type} msg: {txt}"
         self.assertLessEqual(w, max_text_width, msg=msg)
 
   def test_alert_sanity_check(self):
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_alerts.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_cruise_speed.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/tests/test_clustering.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/fcw.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/drive_helpers.py...no change
--- /Users/braandon/openpilot/selfdrive/controls/lib/radar_helpers.py

+++ 

@@ -146,7 +146,7 @@

     }
 
   def __str__(self):
-    ret = "x: %4.1f  y: %4.1f  v: %4.1f  a: %4.1f" % (self.dRel, self.yRel, self.vRel, self.aLeadK)
+    ret = f"x: {self.dRel:4.1f}  y: {self.yRel:4.1f}  v: {self.vRel:4.1f}  a: {self.aLeadK:4.1f}"
     return ret
 
   def potential_low_speed_lead(self, v_ego):
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/radar_helpers.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/lane_planner.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/alertmanager.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/pid.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/latcontrol_angle.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"Steer Unavailable Below %d %s" % ( speed , unit )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"Calibration in Progress: %d%%" % sm [ 'liveCalibration' ] . calPerc'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"Drive Above %d %s" % ( speed , unit )'
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/events.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/lateral_planner.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/vehicle_model.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/longcontrol.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/latcontrol_indi.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/latcontrol_pid.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/longitudinal_planner.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/latcontrol_lqr.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/cluster/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/cluster/fastcluster_py.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/lateral_mpc_lib/lat_mpc.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/lateral_mpc_lib/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/longitudinal_mpc_lib/__init__.py...no change
--- /Users/braandon/openpilot/selfdrive/controls/lib/longitudinal_mpc_lib/long_mpc.py

+++ 

@@ -351,8 +351,7 @@

     if self.solution_status != 0:
       if t > self.last_cloudlog_t + 5.0:
         self.last_cloudlog_t = t
-        cloudlog.warning("Long mpc reset, solution_status: %s" % (
-                          self.solution_status))
+        cloudlog.warning(f"Long mpc reset, solution_status: {self.solution_status}")
       self.prev_lead_status = False
       self.reset()
 
fstringifying /Users/braandon/openpilot/selfdrive/controls/lib/longitudinal_mpc_lib/long_mpc.py...modified
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"....%d" % i'
fstringifying /Users/braandon/openpilot/selfdrive/manager/build.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/manager/process_config.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/manager/__init__.py...no change
--- /Users/braandon/openpilot/selfdrive/manager/process.py

+++ 

@@ -35,7 +35,7 @@

     # exec the process
     mod.main()
   except KeyboardInterrupt:
-    cloudlog.warning("child %s got SIGINT" % proc)
+    cloudlog.warning(f"child {proc} got SIGINT")
   except Exception:
     # can't install the crash handler because sys.excepthook doesn't play nice
     # with threads, so catch it here.
@@ -190,7 +190,7 @@

       return
 
     cwd = os.path.join(BASEDIR, self.cwd)
-    cloudlog.info("starting process %s" % self.name)
+    cloudlog.info(f"starting process {self.name}")
     self.proc = Process(name=self.name, target=nativelauncher, args=(self.cmdline, cwd))
     self.proc.start()
     self.watchdog_seen = False
@@ -210,7 +210,7 @@

 
   def prepare(self):
     if self.enabled:
-      cloudlog.info("preimporting %s" % self.module)
+      cloudlog.info(f"preimporting {self.module}")
       importlib.import_module(self.module)
 
   def start(self):
@@ -221,7 +221,7 @@

     if self.proc is not None:
       return
 
-    cloudlog.info("starting python %s" % self.module)
+    cloudlog.info(f"starting python {self.module}")
     self.proc = Process(name=self.name, target=launcher, args=(self.module,))
     self.proc.start()
     self.watchdog_seen = False
@@ -256,7 +256,7 @@

         # process is dead
         pass
 
-    cloudlog.info("starting daemon %s" % self.name)
+    cloudlog.info(f"starting daemon {self.name}")
     proc = subprocess.Popen(['python', '-m', self.module],  # pylint: disable=subprocess-popen-preexec-fn
                                stdin=open('/dev/null', 'r'),
                                stdout=open('/dev/null', 'w'),
fstringifying /Users/braandon/openpilot/selfdrive/manager/process.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/manager/helpers.py...no change
Failed to parse transformed code 'f"{'\\x1b[32m' if p.proc.is_alive() else '\\x1b[31m'}{p.name}[0m"' given original '"%s%s\u001b[0m" % ( "\u001b[32m" if p . proc . is_alive ( ) else "\u001b[31m" , p . name )'
f-string expression part cannot include a backslash (<unknown>, line 1)
fstringifying /Users/braandon/openpilot/selfdrive/manager/manager.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/manager/test/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/manager/test/test_manager.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/xattr_cache.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/config.py...no change
--- /Users/braandon/openpilot/selfdrive/loggerd/uploader.py

+++ 

@@ -158,7 +158,7 @@

       cloudlog.debug("upload_url v1.3 %s %s", url, str(headers))
 
       if fake_upload:
-        cloudlog.debug("*** WARNING, THIS IS A FAKE UPLOAD TO %s ***" % url)
+        cloudlog.debug(f"*** WARNING, THIS IS A FAKE UPLOAD TO {url} ***")
 
         class FakeResponse():
           def __init__(self):
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/uploader.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/__init__.py...no change
--- /Users/braandon/openpilot/selfdrive/loggerd/deleter.py

+++ 

@@ -27,11 +27,11 @@

           continue
 
         try:
-          cloudlog.info("deleting %s" % delete_path)
+          cloudlog.info(f"deleting {delete_path}")
           shutil.rmtree(delete_path)
           break
         except OSError:
-          cloudlog.exception("issue deleting %s" % delete_path)
+          cloudlog.exception(f"issue deleting {delete_path}")
       exit_event.wait(.1)
     else:
       exit_event.wait(30)
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/deleter.py...modified
--- /Users/braandon/openpilot/selfdrive/loggerd/tools/mark_unuploaded.py

+++ 

@@ -4,6 +4,6 @@

 from selfdrive.loggerd.uploader import UPLOAD_ATTR_NAME
 
 for fn in sys.argv[1:]:
-  print("unmarking %s" % fn)
+  print(f"unmarking {fn}")
   removexattr(fn, UPLOAD_ATTR_NAME)
 
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tools/mark_unuploaded.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tools/mark_all_uploaded.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/test_loggerd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/test_uploader.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"1970-01-01--00-00-00--%d" % segment_idx'
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/fill_eon.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/test_encoder.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/loggerd_tests_common.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/loggerd/tests/test_deleter.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/monitoring/driver_monitor.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/monitoring/test_monitoring.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/monitoring/dmonitoringd.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/modeld/constants.py...no change
--- /Users/braandon/openpilot/selfdrive/modeld/visiontest.py

+++ 

@@ -62,7 +62,7 @@

       disable_model = 0
       temporal_model = 1
     else:
-      raise ValueError("Bad model name: {}".format(model))
+      raise ValueError(f"Bad model name: {model}")
 
     prevdir = os.getcwd()
     os.chdir(_visiond_dir)  # tmp hack to find kernels
fstringifying /Users/braandon/openpilot/selfdrive/modeld/visiontest.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/modeld/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/modeld/test/timing/benchmark.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/modeld/test/tf_test/pb_loader.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/modeld/runners/onnx_runner.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/snapshot/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/snapshot/snapshot.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/test/check_skips.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/test/test_exposure.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%02d" % idx'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"send %d" % idx'
fstringifying /Users/braandon/openpilot/selfdrive/camerad/test/frame_test.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/camerad/test/get_thumbnails_for_segment.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%s frame id diff is %d" % ( camera , dfid )'
--- /Users/braandon/openpilot/selfdrive/camerad/test/test_camerad.py

+++ 

@@ -54,7 +54,7 @@

           self.assertTrue(abs(dfid - 1) <= SKIP_FRAME_TOLERANCE, "%s frame id diff is %d" % (camera, dfid))
 
           dts = ct - last_ts[camera]
-          self.assertTrue(abs(dts - (1000/CAMERAS[camera])) < LAG_FRAME_TOLERANCE, "%s frame t(ms) diff is %f" % (camera, dts))
+          self.assertTrue(abs(dts - (1000/CAMERAS[camera])) < LAG_FRAME_TOLERANCE, f"{camera} frame t(ms) diff is {dts:f}")
 
           last_frame_id[camera] = sm[camera].frameId
           last_ts[camera] = ct
fstringifying /Users/braandon/openpilot/selfdrive/camerad/test/test_camerad.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/hyundai_enable_radar_points.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/cycle_alerts.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/count_events.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/run_process_on_route.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/show_matching_cars.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/check_lag.py...no change
Not converting code '"%d: %d" % v': This expression involves tuple unpacking.
fstringifying /Users/braandon/openpilot/selfdrive/debug/fingerprint_from_route.py...no change
--- /Users/braandon/openpilot/selfdrive/debug/check_freq.py

+++ 

@@ -42,7 +42,7 @@

       for name in socket_names:
         dts = np.diff(rcv_times[name])
         mean = np.mean(dts)
-        print("%s: Freq %.2f Hz, Min %.2f%%, Max %.2f%%, valid " % (name, 1.0 / mean, np.min(dts) / mean * 100, np.max(dts) / mean * 100), all(valids[name]))
+        print(f"{name}: Freq {1.0 / mean:.2f} Hz, Min {np.min(dts) / mean * 100:.2f}%, Max {np.max(dts) / mean * 100:.2f}%, valid ", all(valids[name]))
 
       prev_print = t
 
fstringifying /Users/braandon/openpilot/selfdrive/debug/check_freq.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/compare_fingerprints.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/toyota_eps_factor.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/__init__.py...no change
Not converting code '"%d: %d" % v': This expression involves tuple unpacking.
--- /Users/braandon/openpilot/selfdrive/debug/get_fingerprint.py

+++ 

@@ -27,6 +27,6 @@

 
   fingerprint = ', '.join("%d: %d" % v for v in sorted(msgs.items()))
 
-  print("number of messages {0}:".format(len(msgs)))
-  print("fingerprint {0}".format(fingerprint))
+  print(f"number of messages {len(msgs)}:")
+  print(f"fingerprint {fingerprint}")
 
fstringifying /Users/braandon/openpilot/selfdrive/debug/get_fingerprint.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/disable_ecu.py...no change
--- /Users/braandon/openpilot/selfdrive/debug/dump.py

+++ 

@@ -54,13 +54,13 @@

         elif args.dump_json:
           print(json.dumps(evt.to_dict()))
         elif values:
-          print("logMonotime = {}".format(evt.logMonoTime))
+          print(f"logMonotime = {evt.logMonoTime}")
           for value in values:
             if hasattr(evt, value[0]):
               item = evt
               for key in value:
                 item = getattr(item, key)
-              print("{} = {}".format(".".join(value), item))
+              print(f"{'.'.join(value)} = {item}")
           print("")
         else:
           try:
fstringifying /Users/braandon/openpilot/selfdrive/debug/dump.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/can_print_changes.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%s(%6d) %s\n" % ( "%04X(%4d)" % ( k , k ) , len ( msgs [ k ] ) , v . decode ( 'ascii' ) )'
--- /Users/braandon/openpilot/selfdrive/debug/can_printer.py

+++ 

@@ -24,7 +24,7 @@

 
     if sec_since_boot() - lp > 0.1:
       dd = chr(27) + "[2J"
-      dd += "%5.2f\n" % (sec_since_boot() - start)
+      dd += f"{sec_since_boot() - start:5.2f}\n"
       for k, v in sorted(zip(msgs.keys(), map(lambda x: binascii.hexlify(x[-1]), msgs.values()))):
         if max_msg is None or k < max_msg:
           dd += "%s(%6d) %s\n" % ("%04X(%4d)" % (k, k), len(msgs[k]), v.decode('ascii'))
fstringifying /Users/braandon/openpilot/selfdrive/debug/can_printer.py...modified
--- /Users/braandon/openpilot/selfdrive/debug/live_cpu_and_temp.py

+++ 

@@ -71,7 +71,7 @@

       total_times = total_times_new[:]
       busy_times = busy_times_new[:]
 
-      print("CPU %.2f%% - RAM: %.2f%% - Temp %.2fC" % (100. * mean(cores), last_mem, last_temp))
+      print(f"CPU {100.0 * mean(cores):.2f}% - RAM: {last_mem:.2f}% - Temp {last_temp:.2f}C")
 
       if args.cpu and prev_proclog is not None:
         procs = {}
fstringifying /Users/braandon/openpilot/selfdrive/debug/live_cpu_and_temp.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/test_fw_query_on_routes.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/set_car_params.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/filter_log_message.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/uiview.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/check_timings.py...no change
Failed to parse transformed code 'f'avg sum: {sum([stat['avg']['total'] for k, stat in stats.items()]):.2%} over {i} samples {i * SLEEP_INTERVAL} seconds\n'' given original ''avg sum: {0:.2%} over {1} samples {2} seconds\n' . format ( sum ( [ stat [ 'avg' ] [ 'total' ] for k , stat in stats . items ( ) ] ) , i , i * SLEEP_INTERVAL )'
f-string: unmatched '[' (<unknown>, line 1)
--- /Users/braandon/openpilot/selfdrive/debug/cpu_usage_stat.py

+++ 

@@ -110,10 +110,10 @@

           stat['avg'][name] = (stat['avg'][name] * (i - c) + avg * c) / (i)
           stat['cpu_samples'][name] = []
 
-        msg = 'avg: {1:.2%}, min: {2:.2%}, max: {3:.2%} {0}'.format(os.path.basename(k), stat['avg']['total'], stat['min']['total'], stat['max']['total'])
+        msg = f"avg: {stat['avg']['total']:.2%}, min: {stat['min']['total']:.2%}, max: {stat['max']['total']:.2%} {os.path.basename(k)}"
         if args.detailed_times:
           for stat_type in ['avg', 'min', 'max']:
-            msg += '\n {}: {}'.format(stat_type, [name + ':' + str(round(stat[stat_type][name]*100, 2)) for name in cpu_time_names])
+            msg += f"\n {stat_type}: {[(name + ':' + str(round(stat[stat_type][name] * 100, 2))) for name in cpu_time_names]}"
         l.append((os.path.basename(k), stat['avg']['total'], msg))
       l.sort(key=lambda x: -x[1])
       for x in l:
fstringifying /Users/braandon/openpilot/selfdrive/debug/cpu_usage_stat.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/measure_torque_time_to_max.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/test_paramsd.py...no change
--- /Users/braandon/openpilot/selfdrive/debug/internal/power_monitor.py

+++ 

@@ -45,7 +45,7 @@

       capacity_average = average(capacity_average, capacity)
       bat_temp_average = average(bat_temp_average, bat_temp)
 
-      print("%.2f volts %12.2f ma %12.2f mW %8.2f%% battery %8.1f degC" % (voltage, current, power, capacity, bat_temp))
+      print(f"{voltage:.2f} volts {current:12.2f} ma {power:12.2f} mW {capacity:8.2f}% battery {bat_temp:8.1f} degC")
       time.sleep(0.1)
   finally:
     stop_time = datetime.now()
@@ -55,8 +55,8 @@

     power = power_average[0]
     capacity = capacity_average[0]
     bat_temp = bat_temp_average[0]
-    print("%.2f volts %12.2f ma %12.2f mW %8.2f%% battery %8.1f degC" % (voltage, current, power, capacity, bat_temp))
-    print("  {:.2f} Seconds     {} samples".format((stop_time-start_time).total_seconds(), voltage_average[1]))
+    print(f"{voltage:.2f} volts {current:12.2f} ma {power:12.2f} mW {capacity:8.2f}% battery {bat_temp:8.1f} degC")
+    print(f"  {(stop_time - start_time).total_seconds():.2f} Seconds     {voltage_average[1]} samples")
     print("----------------------------------------------------------------")
 
     # reenable charging
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/power_monitor.py...modified
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/fuzz_fw_fingerprint.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"echo %d %d > /sys/kernel/debug/regulator/pm8994_s11/voltage" % ( i , i )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"echo %d %d > /sys/kernel/debug/regulator/pm8994_s11/voltage" % ( i , i )'
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/core_voltage_sweep.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/run_paramsd_on_route.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/design_lqr.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/sensor_test_bootloop.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/measure_modeld_packet_drop.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/qlog_size.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/check_alive_valid.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/measure_steering_accuracy.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/sounds/test_sounds.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/debug/internal/sounds/test_sound_stability.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/registration.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/manage_athenad.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/athenad.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/tests/test_athenad.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/tests/test_athenad_old.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/tests/test_registration.py...no change
fstringifying /Users/braandon/openpilot/selfdrive/athena/tests/helpers.py...no change
--- /Users/braandon/openpilot/common/ffi_wrapper.py

+++ 

@@ -28,7 +28,7 @@

     try:
       mod = __import__(cache)
     except Exception:
-      print("cache miss {0}".format(cache))
+      print(f"cache miss {cache}")
       compile_code(cache, c_code, c_header, tmpdir, cflags, libraries)
       mod = __import__(cache)
   finally:
fstringifying /Users/braandon/openpilot/common/ffi_wrapper.py...modified
fstringifying /Users/braandon/openpilot/common/string_helpers.py...no change
fstringifying /Users/braandon/openpilot/common/filter_simple.py...no change
fstringifying /Users/braandon/openpilot/common/stat_live.py...no change
fstringifying /Users/braandon/openpilot/common/params.py...no change
fstringifying /Users/braandon/openpilot/common/window.py...no change
--- /Users/braandon/openpilot/common/realtime.py

+++ 

@@ -79,7 +79,7 @@

     remaining = self._next_frame_time - sec_since_boot()
     self._next_frame_time += self._interval
     if self._print_delay_threshold is not None and remaining < -self._print_delay_threshold:
-      print("%s lagging by %.2f ms" % (self._process_name, -remaining * 1000))
+      print(f"{self._process_name} lagging by {-remaining * 1000:.2f} ms")
       lagged = True
     self._frame += 1
     self._remaining = remaining
fstringifying /Users/braandon/openpilot/common/realtime.py...modified
fstringifying /Users/braandon/openpilot/common/dict_helpers.py...no change
fstringifying /Users/braandon/openpilot/common/logging_extra.py...no change
--- /Users/braandon/openpilot/common/timeout.py

+++ 

@@ -12,7 +12,7 @@

   """
   def __init__(self, seconds, error_msg=None):
     if error_msg is None:
-      error_msg = 'Timed out after {} seconds'.format(seconds)
+      error_msg = f'Timed out after {seconds} seconds'
     self.seconds = seconds
     self.error_msg = error_msg
 
fstringifying /Users/braandon/openpilot/common/timeout.py...modified
fstringifying /Users/braandon/openpilot/common/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/numpy_fast.py...no change
fstringifying /Users/braandon/openpilot/common/cython_hacks.py...no change
fstringifying /Users/braandon/openpilot/common/text_window.py...no change
fstringifying /Users/braandon/openpilot/common/numpy_helpers.py...no change
fstringifying /Users/braandon/openpilot/common/gpio.py...no change
fstringifying /Users/braandon/openpilot/common/xattr.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"******* Profiling %d *******" % self . iter'
Exception Default text alignment has changed between percent fmt and fstrings. Proceeding would result in changed code behaviour. during conversion of code '"%30s: %9.2f  avg: %7.2f  percent: %3.0f   IGNORED" % ( n , ms * 1000.0 , ms * 1000.0 / self . iter , ms / self . tot * 100 )'
Exception Default text alignment has changed between percent fmt and fstrings. Proceeding would result in changed code behaviour. during conversion of code '"%30s: %9.2f  avg: %7.2f  percent: %3.0f" % ( n , ms * 1000.0 , ms * 1000.0 / self . iter , ms / self . tot * 100 )'
--- /Users/braandon/openpilot/common/profiler.py

+++ 

@@ -42,5 +42,5 @@

         print("%30s: %9.2f  avg: %7.2f  percent: %3.0f   IGNORED" % (n, ms*1000.0, ms*1000.0/self.iter, ms/self.tot*100))
       else:
         print("%30s: %9.2f  avg: %7.2f  percent: %3.0f" % (n, ms*1000.0, ms*1000.0/self.iter, ms/self.tot*100))
-    print("Iter clock: %2.6f   TOTAL: %2.2f" % (self.tot/self.iter, self.tot))
+    print(f"Iter clock: {self.tot / self.iter:2.6f}   TOTAL: {self.tot:2.2f}")
 
fstringifying /Users/braandon/openpilot/common/profiler.py...modified
fstringifying /Users/braandon/openpilot/common/spinner.py...no change
--- /Users/braandon/openpilot/common/file_helpers.py

+++ 

@@ -35,7 +35,7 @@

   if len(parts) > 1 and parts[1] == "scratch":
     return "/scratch/tmp"
   elif len(parts) > 2 and parts[2] == "runner":
-    return "/{}/runner/tmp".format(parts[1])
+    return f"/{parts[1]}/runner/tmp"
   return "/tmp"
 
 
fstringifying /Users/braandon/openpilot/common/file_helpers.py...modified
fstringifying /Users/braandon/openpilot/common/basedir.py...no change
fstringifying /Users/braandon/openpilot/common/lazy_property.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/orientation.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/model.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/camera.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/coordinates.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/tests/test_orientation.py...no change
fstringifying /Users/braandon/openpilot/common/transformations/tests/test_coordinates.py...no change
--- /Users/braandon/openpilot/common/tests/test_file_helpers.py

+++ 

@@ -8,7 +8,7 @@

 
 class TestFileHelpers(unittest.TestCase):
   def run_atomic_write_func(self, atomic_write_func):
-    path = "/tmp/tmp{}".format(uuid4())
+    path = f"/tmp/tmp{uuid4()}"
     with atomic_write_func(path) as f:
       f.write("test")
 
fstringifying /Users/braandon/openpilot/common/tests/test_file_helpers.py...modified
fstringifying /Users/braandon/openpilot/common/tests/test_xattr.py...no change
fstringifying /Users/braandon/openpilot/common/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/tests/test_params.py...no change
fstringifying /Users/braandon/openpilot/common/tests/test_numpy_fast.py...no change
fstringifying /Users/braandon/openpilot/common/kalman/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/kalman/simple_kalman.py...no change
fstringifying /Users/braandon/openpilot/common/kalman/simple_kalman_old.py...no change
fstringifying /Users/braandon/openpilot/common/kalman/tests/__init__.py...no change
fstringifying /Users/braandon/openpilot/common/kalman/tests/test_simple_kalman.py...no change
fstringifying /Users/braandon/openpilot/common/api/__init__.py...no change
fstringifying /Users/braandon/openpilot/scripts/count_cars.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%3d: %8d" % ( core , i )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%3d: %8d %f  %.2f" % ( core , i , lt - st , j )'
fstringifying /Users/braandon/openpilot/scripts/waste.py...no change
fstringifying /Users/braandon/openpilot/scripts/__init__.py...no change
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%5d %s %s" % ( lns , f , xbit )'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%d lines of openpilot python" % tlns'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%d lines of car ports" % carlns'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%d lines of tools/scripts/debug" % scriptlns'
Exception Skipping %d formatting - fstrings behave differently from % formatting. during conversion of code '"%d lines of tests" % testlns'
fstringifying /Users/braandon/openpilot/scripts/code_stats.py...no change
fstringifying /Users/braandon/openpilot/site_scons/site_tools/cython.py...no change

Flynt run has finished. Stats:

Execution time:                            4.782s
Files modified:                            54
Character count reduction:                 835 (0.05%)

Per expression type:
Old style (`%`) expressions attempted:     85/146 (58.2%)
`.format(...)` calls attempted:            60/60 (100.0%)
No concatenations attempted.
F-string expressions created:              128
Out of all attempted transforms, 65 resulted in errors.
To find out specific error messages, use --verbose flag.

_-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_._-_.
Please run your tests before committing. Did flynt get a perfect conversion? give it a star at: 
~ https://github.com/ikamensh/flynt ~
Thank you for using flynt. Upgrade more projects and recommend it to your colleagues!

